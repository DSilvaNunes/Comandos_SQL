----CREATE TABBLE
----CREATE TABLE nomeTabela(
--coluna1 tipo restricaoColuna,
--coluna2 tipo,
--coluna3 tipo
--)

CREATE TABLE Canal(
CanalID INT PRIMARY KEY,
Nome VARCHAR (150) NOT NULL,
ContagemInscritos INT DEFAULT 0,
DataCriacao DATETIME NOT NULL,
);

SELECT * 
FROM Canal

CREATE TABLE Video(
VideoID INT PRIMARY KEY,
Nome VARCHAR(150) NOT NULL,
Visualizacoes INT DEFAULT 0,
Likes INT DEFAULT 0,
Deslikes INT DEFAULT 0,
Duracao INT NOT NULL	,
CanalID INT FOREIGN KEY REFERENCES Canal(CanalID),
);

SELECT * 
FROM Video

--DESAFIO CRIAR TABELAS

CREATE TABLE Casa(
CasaID INT PRIMARY KEY,
QuantidadeQuartos INT DEFAULT 0,
QuantidadeBanheiros INT DEFAULT 0,
Garagem BIT NOT NULL,
);

select * from casa

CREATE TABLE Patrimonio(
PatrimonioID INT PRIMARY KEY,
CasaID INT FOREIGN KEY REFERENCES Casa(CasaID),
Carro BIT NOT NULL,
RendimentosBanco INT NOT NULL,
);

select * from Patrimonio

-------------------------------------------------------------------------------------------------------------------------
--INSERT INTO - USADO QNTO TEM UMA TABELA E QUER INSERIR DADOS NELA OU QUER CRIAR UMA NOVA TABELA USANDO O INTO
--SINTAXE para CRIAR
--INSERT INTO nomeTabela(coluna1, coluna2)
--VALUES (valor1,valor2)


--INSERIR INFOS DE UMA TABELA PARA OUTRA TABELA JA EXISTENTE
--INSERT INTO tabelaA (coluna1)
--SELECT coluna2
--FROM tabelaB

CREATE TABLE AULA(
ID INT PRIMARY KEY,
NOME VARCHAR(200),
);

INSERT INTO AULA(ID,NOME)
VALUES (1,'AULA01')

INSERT INTO AULA(ID,NOME)
VALUES
(2,'AULA02'),
(3,'AULA03'),
(4,'AULA04');

SELECT *FROM AULA

SELECT * INTO tabelaNova FROM AULA -- PEGA OS PARAMETROS DA TABELA ''AULA''
 
SELECT * FROM tabelaNova


CREATE TABLE VEICULO(
VEICULOID INT PRIMARY KEY,
MARCA VARCHAR(100),
MODELO VARCHAR(100),
ANO INT NOT NULL,
);
SELECT * FROM VEICULO

INSERT INTO VEICULO(VEICULOID,MARCA,MODELO,ANO)
VALUES
(1,'VW','GOL',1999),
(2,'FORD','ESCOSPORT',2008),
(3,'SEAT','CORDOBA',1999),
(4,'FIAT','UNO',2016),
(5,'HONDA','TITAN',2007);

SELECT * FROM VEICULO

CREATE TABLE CARRO_NOVO(
CARRONOVOID INT PRIMARY KEY,
COR VARCHAR(100) NOT NULL,
);

SELECT * FROM CARRO_NOVO

INSERT INTO CARRO_NOVO(CARRONOVOID,COR)
VALUES
(1,'AZUL'),
(2,'AMARELO')

SELECT * FROM CARRO_NOVO

------------------------------------------------------------------------------------------------------------------------------

--UPDATE - SERVE PARA ATUALIZAR O BANCO DE DADOS
--SINTAXE UPDATE NOMETABELA
--        SET COLUNA=VALOR1
--		    COLUNA2=VALOR2
--			WHERE CONDICAO


SELECT * FROM AULA

UPDATE AULA 
SET NOME='TESTE'
WHERE ID=3

SELECT * FROM AULA


SELECT * FROM VEICULO

UPDATE VEICULO
SET MARCA= 'VW SEAT'
WHERE MARCA='SEAT'

SELECT * FROM VEICULO


--------------------------------------------------------------------------------------------------------------------------
--DELETE APAGA DADOS - TEM QUE COLOCAR UMA CONDICAO PARA ELE NAO APAGAR TUDO PARA NAO APAGAR TUDO

--SINTAXE DELETE FROM nomeTabela
--        WHERE condicao

SELECT *
FROM AULA

DELETE FROM AULA
WHERE NOME = 'AULA03' -- APAGOU A LINHA COM AULA03

SELECT *
FROM AULA

---------------------------------------------------------------------------------------------------------------------------
--ALTER TABLE - ALTERA A ESTRUTURA DE UMA TABELA
--SINTAXE 
--      ALTER TABLE NomeTabela
--		ACAO QUE QUER FAZER (ADD, REMOVER OU ALTERAR COLUNA
--							 SETAR VALORES PADROES PARA UMA COLUNA
--							 ADICIONAR OU REMOVER RESTRICOES DE COLUNAS
--							 RENOMEAR UMA TABELA


CREATE TABLE YOUTUBE_VERSAO2(

ID INT PRIMARY KEY,
NOME VARCHAR (100) NOT NULL UNIQUE,
CATEGORIA VARCHAR (100) NOT NULL,
DATACRIACAO DATETIME NOT NULL
);

SELECT *
FROM YOUTUBE_VERSAO2

ALTER TABLE YOUTUBE_VERSAO2
ADD ATIVO BIT -- CRIOU A COLUNA ATIVO

ALTER TABLE YOUTUBE_VERSAO2
ALTER COLUMN CATEGORIA VARCHAR (300) NOT NULL -- MUDOU A CAPACIDADE DA LINHA CATEGORIA DE 100 CARACTERES PARA 300

--PARA MUDAR NOME DE COLUNA - TEM PROCEDURE ESPECIFICA
--EXEC sp_rename 'nomeTabela.nomeColunaAtual',  'nomeColunaNova', 'COLUMN'

EXEC sp_rename 'YOUTUBE_VERSAO2.NOME', 'NOMECANAL', 'COLUMN'
SELECT * FROM YOUTUBE_VERSAO2 -- MUDOU O 'NOME' PARA 'NOMECANAL'

EXEC sp_rename 'YOUTUBE_VERSAO2', 'YOUTUBE_VERSAO3' -- MUDANCA DE NOME DA TABELA

SELECT * FROM YOUTUBE_VERSAO3
---DESAFIO

--CRIAR TABELA COM 3 COLUNAS

CREATE TABLE MUDANCA(
ID INT PRIMARY KEY,
NOME_OBJETOS VARCHAR(200) NOT NULL UNIQUE,
DATA_MUDANCA DATETIME NOT NULL,
VALOR INT NOT NULL
);

SELECT * FROM MUDANCA

--ALTERAR TIPO DE COLUNA

ALTER TABLE MUDANCA
ALTER COLUMN NOME_OBJETOS VARCHAR (500) NOT NULL

---RENOMEAR UMA COLUNA

EXEC sp_rename 'MUDANCA.NOME_OBJETOS', 'OBJETOS', 'COLUMN'
SELECT * FROM MUDANCA

--RENOMEAR A TABELA
EXEC sp_rename 'MUDANCA', 'MUDANÇA_RESIDENCIA'
SELECT * FROM MUDANÇA_RESIDENCIA

--------------------------------------------------------------------------------------------------------------------------

--DROP TABLE (EXCLUIR )
--SINTAXE		DROP TABLE NOMETABELA

DROP TABLE MUDANÇA_RESIDENCIA -- EXCLUIU A TABELA 'MUDANÇA_RESIDENCIA'

--TRUNCATE TABLE NOMETABELA - LIMPA OS DADOS DENTRO DA TABELA SEM APAGAR A TABELA

--DESAFIO 
--CRIAR UMA TABELA E APAGAR A MESMA
CREATE TABLE GELADEIRA (
ID_GELADEIRA INT PRIMARY KEY,
LITROS INT NOT NULL,
MODELO VARCHAR(100)
);
SELECT * FROM GELADEIRA
DROP TABLE GELADEIRA
SELECT * FROM GELADEIRA

--CRIAR UMA TABELA, ADICIONAR DADOS E APAGAR OS DADOS DENTRO DA TABELA

CREATE TABLE GELADEIRA_NOVA (
ID_GELADEIRA INT PRIMARY KEY,
LITROS INT NOT NULL,
MODELO VARCHAR(100)
);
SELECT * FROM GELADEIRA_NOVA

INSERT INTO GELADEIRA_NOVA (ID_GELADEIRA,LITROS, MODELO)
VALUES
(1,850,'CONSUL'),
(2,750,'PANASONIC'),
(3,1000,'BRASTEMP');

SELECT * FROM GELADEIRA_NOVA

TRUNCATE TABLE GELADEIRA_NOVA -- APAGA OS DADOS DENTRO DA TABELA

SELECT * FROM GELADEIRA_NOVA
----------------------------------------------------------------------------------------------------------------------------

--CHECK CONSTRAINT - AJUDA A FAZER RESTRICOES COM VALORES 

--SINTAXE 

CREATE TABLE CARTEIRA_MOTORISTA(
ID INT PRIMARY KEY,
NOME VARCHAR(250) NOT NULL,
IDADE INT CHECK (IDADE>=18) -- RESTRICAO USANDO O CHECK PARA USAR UMA VALIDACAO
);
SELECT*FROM CARTEIRA_MOTORISTA

INSERT INTO CARTEIRA_MOTORISTA (ID,NOME,IDADE) 
VALUES  (1,'DOUGLAS',36),(2,'JOAO',18) -- VALORES ACEITOS

SELECT*FROM CARTEIRA_MOTORISTA

INSERT INTO CARTEIRA_MOTORISTA (ID,NOME,IDADE) 
VALUES  (3,'MARIA',16) -- VALOR NAO ACEITO E NAO ADICIONADO NA TABELA

SELECT*FROM CARTEIRA_MOTORISTA

--DESAFIO 2 TABELAS COM RESTRICOES NUMERICAS
--TABELA1
CREATE TABLE SALARIO_MINIMO(
ID INT PRIMARY KEY,
NOME VARCHAR(100) NOT NULL,
VALOR INT CHECK (VALOR < 1200)
);
INSERT INTO SALARIO_MINIMO (ID,NOME,VALOR)
VALUES (1,'DOUGLAS',600),(2,'MARIA',700)

SELECT * FROM SALARIO_MINIMO

INSERT INTO SALARIO_MINIMO (ID,NOME,VALOR)
VALUES (1,'SLASH',1201) -- NAO ACEITA PQ É MAIOR QUE 1200

SELECT * FROM SALARIO_MINIMO

--TABELA 2

CREATE TABLE TINTAS(
ID INT PRIMARY KEY,
COR VARCHAR(100) CHECK (COR='AZUL') NOT NULL,
LITROS INT NOT NULL
);

SELECT * FROM TINTAS

INSERT INTO TINTAS(ID,COR,LITROS)
VALUES (1,'BRANCA',50),(2,'PRETA',65) -- NAO ACEITA PQ A RESTRICAO TEM Q SER IGUAL A AZUL

INSERT INTO TINTAS(ID,COR,LITROS)
VALUES (1,'AZUL',50) -- ACEITOU POR A COR FOI IGUAL 'AZUL'


SELECT * FROM TINTAS
--------------------------------------------------------------------------------------------------------------------------

--NOT NULL CONSTRAINT --https://www.youtube.com/watch?v=rX2I7OjLqWE&t=12616s
--RESTRICAO ONDE FORÇA COM QUE NAO SEJA POSSIVEL INSERIR DADOS EM UMA TABELA SEM PREENCHER UMA COLUNA MARCADA COM NOT NULL
SINTAXE

CREATE TABLE CARTEIRA_CNH(
ID INT PRIMARY KEY NOT NULL,
NOME VARCHAR(250) NOT NULL,
IDADE INT CHECK (IDADE>=18)
);

SELECT * FROM CARTEIRA_CNH

INSERT INTO CARTEIRA_CNH(ID,NOME,IDADE)
VALUES   (1,'DOUGLAS',36)
--(1,  ,18), -- NAO ACEITA NADA EM BRANCO NO SEGUNDO CAMPO POR CONTA DO NOT NULL
SELECT * FROM CARTEIRA_CNH

--DESAFIO CRIAR DUAS TABELAS COM VALORES NOT NULL

--DESAFIO TABELA 1
CREATE TABLE NOTEBOOK(
ID INT PRIMARY KEY NOT NULL,
MARCA VARCHAR(150) NOT NULL

);

SELECT * FROM NOTEBOOK

INSERT INTO NOTEBOOK(ID,MARCA) VALUES (1,'ACER') --( , ) NAO ACEITA POR ESTAR VAZIO

SELECT * FROM NOTEBOOK

--DESAFIO TABELA 2

CREATE TABLE PORTA(
ID INT PRIMARY KEY NOT NULL,
TAMANHO_CM INT NOT NULL
);
SELECT * FROM PORTA

INSERT INTO PORTA(ID, TAMANHO_CM) VALUES (1,100) --(,) NAO ACEITA CAMPOS SEM VALORES POR CONTA DO NOT NULL

SELECT * FROM PORTA

----------------------------------------------------------------------------------------------------------------------------

-- DIFERENÇAS UNIQUE CONSTRAINT E PK 
-- PK POR SER DEFINIDO UMA VEZ POR COLUNA - JA A UNIQUE PODE SER USADAS EM VARIAS COLUNAS E NAO PERMITE INSERIR VALORES REPETIDOS NA TABELA

CREATE TABLE CPF(
CPF INT NOT NULL UNIQUE
);

SELECT * FROM CPF

INSERT INTO CPF(CPF) VALUES (123456) -- ACEITOU
INSERT INTO CPF(CPF) VALUES (123456) -- NAO PERMITE POR CONTA DA UNIQUE

-----------------------------------------------------------------------------------------------------------------------------
--COMANDO VIEWS -- TABELA CRIADA A PARTIR DE OUTRA PARA CONSULTA DE DADOS ESPECIFICOS
--SINTAXE 

CREATE VIEW [NOME QUE VC QUER DAR PRA VIEW] AS 
SELECT FIRSTNAME, MIDDLENAME, LASTNAME
FROM PERSON.PERSON
WHERE TITLE = 'MS.'













