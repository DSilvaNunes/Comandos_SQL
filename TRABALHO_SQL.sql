--3.1
SELECT PEDIDO_IDENTIFICACAO, PEDIDO_DATA_ENTRADA
from  PEDIDO 
where date_part ('month', PEDIDO_DATA_ENTRADA) = 6 
    and date_part ('year', PEDIDO_DATA_ENTRADA) = 2012
order by PEDIDO_DATA_ENTRADA

--3.2
SELECT P.PEDIDO_IDENTIFICACAO, P.PEDIDO_DATA_ENTRADA, C.CLIENTE_NOME, E.ESTAD_NOME
from  PEDIDO P
    join CLIENTE C on P.CLIENTE_ID = C.CLIENTE_ID
    join ESTADO E on E.ESTADO_CODIGO = C.ESTADO_CODIGO
where date_part ('month', PEDIDO_DATA_ENTRADA) = 6 
    and date_part ('year', PEDIDO_DATA_ENTRADA) = 2012
order by PEDIDO_DATA_ENTRADA

--3.3
SELECT P.PRODUTO_NOME , I.ITEM_QUANTIDADE * I.ITEM_VALOR_UNITARIO --(TOTAL)
from ITEM I 
    join PRODUTO P on I.PRODUTO_CODIGO = P.PRODUTO_CODIGO
where I.PEDIDO_INDENTIFICACAO = 1257 
order by I.ITEM_VALOR_UNITARIO desc --verificar se Ã© por valor unitario ou valor total

--3.4

SELECT SUM(I.ITEM_QUANTIDADE * I.ITEM_VALOR_UNITARIO)
from ITEM I
where I.PEDIDO_IDENTIFICACAO = 1257

--3.5

SELECT P.UE_PRODUTO_COD, count (P.PRODUTO_CODIGO)
from PRODUTO P

--3.6

SELECT I.PEDIDO_IDENTIFICACAO, SUM(I.ITEM_QUANTIDADE * I.ITEM_VALOR_UNITARIO)
from ITEM I
    join PEDIDO P on I.PEDIDO_IDENTIFICACAO = P.PEDIDO_IDENTIFICACAO
 where date_part ('year', P.PEDIDO_DT_EMBARQUE) = 2012
 group by I.PEDIDO_IDENTIFICACAO
 having   SUM(I.ITEM_QUANTIDADE * I.ITEM_VALOR_UNITARIO) > 1000

--3.7

SELECT I.PEDIDO_IDENTIFICACAO, P.PRODUTO_NOME, PE.PEDIDO_DT_EMBARQUE-PEDIDO_DATA_ENTRADA
from ITEM I 
    join PRODUTO P on P.PRODUTO_CODIGO = I.PRODUTO_CODIGO
    join PEDIDO PE on PE.PEDIDO_IDENTIFICACAO = I.PEDIDO_IDENTIFICACAO
where I.PEDIDO_IDENTIFICACAO = 
(
    SELECT P.PEDIDO_IDENTIFICACAO 
    from PEDIDO P 
    where date_part ('year', P.PEDIDO_DT_EMBARQUE) = 2012
    order by P.PEDIDO_DT_EMBARQUE- P.PEDIDO_DATA_ENTRADA desc 
    limit 1
)
--3.8

update PRODUTO set PRODUTO_PRECO = 1.1 * PRODUTO_PRECO

--3.9

insert into CLIENTE (CLIENTE_ID, CLIENTE_NOME, CLIENTE_END, CLINETE_END_CIDADE, ESTADO_CODIGO, CLIENTE_END_CEP, CLIENTE_TELEFONE, CLIENT_PERC_DESCONTO)
values (1, 'NOME', 'ENDER', 'CIDADE', 'ES', 'CEP', 'TELEF', 0.1); 

--3.10

DELETE from PRODUTO where PRODUTO_CODIGO not in 
(

    SELECT distinct PRODUTO_CODIGO from ITEM 
)





